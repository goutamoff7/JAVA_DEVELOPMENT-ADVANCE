spring.application.name=springOauth2Demo2

# Google Configuration
spring.security.oauth2.client.registration.google.client-id=1082677937519-41l0439s8k63k1bcmiflv9b1gvfksbbd.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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


# GitHub Configuration
spring.security.oauth2.client.registration.github.client-id=Ov23liUAiSM7IOIt5o3K
spring.security.oauth2.client.registration.github.client-secret=73f756ea3398bdacb0fce7f0890b5f96c304e4e6
spring.security.oauth2.client.registration.github.scope=read:user,user:email

# --- LinkedIn Registration ---
spring.security.oauth2.client.registration.linkedin.client-id=77hu89pxfd3tny
spring.security.oauth2.client.registration.linkedin.client-secret=cRSPcOnI81LrLbyw
spring.security.oauth2.client.registration.linkedin.redirect-uri=http://localhost:8080/login/oauth2/code/linkedin
spring.security.oauth2.client.registration.linkedin.scope=openid,profile,email
#spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile,r_emailaddress
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.linkedin.client-authentication-method=client_secret_post

# --- LinkedIn Provider (mandatory, since LinkedIn is not built-in) ---
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.user-name-attribute=id


